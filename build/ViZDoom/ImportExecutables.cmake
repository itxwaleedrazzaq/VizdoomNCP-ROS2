# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.25)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS lemon re2c updaterevision zipdir arithchk qnan)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target lemon
add_executable(lemon IMPORTED)

# Create imported target re2c
add_executable(re2c IMPORTED)

# Create imported target updaterevision
add_executable(updaterevision IMPORTED)

# Create imported target zipdir
add_executable(zipdir IMPORTED)

# Create imported target arithchk
add_executable(arithchk IMPORTED)

# Create imported target qnan
add_executable(qnan IMPORTED)

# Import target "lemon" for configuration "Release"
set_property(TARGET lemon APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(lemon PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/waleed/mypractice/doomncp/build/ViZDoom/bin/lemon"
  )

# Import target "re2c" for configuration "Release"
set_property(TARGET re2c APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(re2c PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/waleed/mypractice/doomncp/build/ViZDoom/bin/re2c"
  )

# Import target "updaterevision" for configuration "Release"
set_property(TARGET updaterevision APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(updaterevision PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/waleed/mypractice/doomncp/build/ViZDoom/bin/updaterevision"
  )

# Import target "zipdir" for configuration "Release"
set_property(TARGET zipdir APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(zipdir PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/waleed/mypractice/doomncp/build/ViZDoom/bin/zipdir"
  )

# Import target "arithchk" for configuration "Release"
set_property(TARGET arithchk APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(arithchk PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/waleed/mypractice/doomncp/build/ViZDoom/bin/arithchk"
  )

# Import target "qnan" for configuration "Release"
set_property(TARGET qnan APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(qnan PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/waleed/mypractice/doomncp/build/ViZDoom/bin/qnan"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
